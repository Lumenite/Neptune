apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: production
  name: {{ .name }}
  labels:
    app: {{ .name }}
    version: {{ .version }}
spec:
  selector:
    matchLabels:
      app: {{ .name }}
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      volumes:
        - name: ft-repository
          persistentVolumeClaim:
            claimName: {{ .name }}-{{ .version }}
      imagePullSecrets:
        - name: ecr-secret
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - caddy
            - php-fpm
      containers:
        - name: caddy
          image: thebots/caddy:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /code
              name: ft-repository
          envFrom:
            - configMapRef:
                name: {{ .name }}
            - secretRef:
                name: {{ .name }}
          env:
            - name: PROJECTS
              value: "{{ .name }}"
          ports:
            - containerPort: 80
          command: ["/bin/bash"]
          args:
            - -c
            - |
              mkdir /etc/caddy
              cat <<EOF >/etc/caddy/{{ .name }}.conf
              *:80 {
                  root /code/{{ .name }}/public
                  fastcgi / php-fpm:9000 php {
                      index index.php
                  }

                  # To handle .html extensions with laravel change ext to
                  ext / .html

                  rewrite {
                      to {path} {path}/ /index.php?{query}
                  }

                  gzip
                  browse

                  log /var/log/caddy/access.log
                  errors /var/log/caddy/error.log

                  # Uncomment to enable TLS (HTTPS)
                  # Change the first list to listen on port 443 when enabling TLS
                  tls {$TLS_EMAIL_ID}

                  # To use Lets encrpt tls with a DNS provider uncomment these
                  # lines and change the provider as required
                  #tls {
                  #  dns cloudflare
                  #}
              }
              EOF
              /etc/boot.sh --conf /etc/Caddyfile --log stdout --agree=true
        - name: php-fpm
          image: thebots/php-fpm:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
          envFrom:
            - configMapRef:
                name: {{ .name }}
            - secretRef:
                name: {{ .name }}
          volumeMounts:
            - mountPath: /code
              name: ft-repository
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              usermod -u 1000 www-data && chown -R www-data:www-data /code
              php-fpm
